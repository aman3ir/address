name: Build and Deploy to CloudHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    # Step to ensure terajdbc jar is copied before building
    - name: Setup terajdbc jar for build
      run: |
        # Ensure the libs directory exists on the runner
        mkdir -p libs
        # Copy the terajdbc jar from the repository's libs folder to the runner
        cp ./libs/terajdbc-20.00.00.06.jar ./libs/terajdbc-20.00.00.06.jar

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8

    - name: Build with Maven
      run: mvn -B clean package -DskipTests

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(echo "$artifactName1" | sed "s/.jar/-$commitHash.jar/")
        mv "$artifactName1" "$artifactName2"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mule-artifact
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    # Step to ensure terajdbc jar is copied before deployment
    - name: Setup terajdbc jar for deploy
      run: |
        # Ensure the libs directory exists on the runner
        mkdir -p libs
        # Copy the terajdbc jar from the repository's libs folder to the runner
        cp ./libs/terajdbc-20.00.00.06.jar ./libs/terajdbc-20.00.00.06.jar

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: mule-artifact
        path: .

    - name: Deploy to CloudHub
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DskipTests -DmuleDeploy \
          -Dmule.artifact="$artifactName" \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
          -Denv="${{ secrets.DEPLOY_ENV }}"